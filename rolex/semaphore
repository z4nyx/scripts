#!bin/bash
IMAGE=$(pwd)/out/arch/arm64/boot/Image.gz-dtb
echo "Clone Toolchains"
git clone -j32 https://github.com/najahiiii/aarch64-linux-gnu -b 4.9-mirror gcc
echo "Done"
echo "Clone AnyKernul"
git clone -j32 https://github.com/z4nyx/AnyKernel
echo "Done"
GCC="$(pwd)/gcc/bin/aarch64-linux-android-"
tanggal=$(TZ=Asia/Kuala_Lumpur date +'%H%M-%d%m%y')
START=$(date +"%s")
export ARCH=arm64
export KBUILD_BUILD_USER=Haikal
export KBUILD_BUILD_HOST=MilkyWay
# sticker plox
function sticker() {
        curl -s -X POST "https://api.telegram.org/bot$token/sendSticker" \
                        -d sticker="CAADBQADZQADMX5eLmccFab0FNs0Ag" \
                        -d chat_id=$chat_id
}
# Send info plox channel
function sendinfo() {
        curl -s -X POST "https://api.telegram.org/bot$token/sendMessage" \
                        -d chat_id=$chat_id \
                        -d "disable_web_page_preview=true" \
                        -d "parse_mode=markdown" \
                        -d text="*CosmicKernel CAF* CI Triggered%0ABuild started on `SemaphoreCI`%0AFor device *Xiaomi Redmi 4A (rolex)*%0Abranch `$(git rev-parse --abbrev-ref HEAD)` (Android 9.0/Pie)%0AUnder commit `$(git log --pretty=format:'"%h : %s"' -1)`%0AUsing compiler: `$(${GCC}gcc --version | head -n 1 | perl -pe 's/\(http.*?\)//gs' | sed -e 's/  */ /g')`%0AStarted on `$(TZ=Asia/Kuala_Lumpur date)`%0A*Build Status:* #Stable"
}
# Push kernel to channel
function push() {
        cd AnyKernel
	ZIP=$(echo Cosmic*.zip)
	curl -F document=@$ZIP "https://api.telegram.org/bot$token/sendDocument" \
			-F chat_id="$chat_id" \
			-F "disable_web_page_preview=true" \
			-F "parse_mode=html" \
			-F caption="Build took $(($DIFF / 60)) minute(s) and $(($DIFF % 60)) second(s). | <b>GCC 4.9.x</b> | For <b>Xiaomi Redmi 4A (rolex)</b> | #sunny"
}
# Fin Error
function finerr() {
        curl -s -X POST "https://api.telegram.org/bot$token/sendSticker" \
                        -d sticker="CAADBQADZgADMX5eLqIwWt3puzSpAg" \
                        -d chat_id=$chat_id
        exit 1
}
# Compile plox
function compile() {
        make -s -C $(pwd) O=out rolex_defconfig
        make -s -C $(pwd) CROSS_COMPILE=${GCC} O=out -j32 -l32 2>&1| tee build.log
            if ! [ -a $IMAGE ]; then
                finerr
                exit 1
            fi
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel/zImage
}
# Zipping
function zipping() {
        cd AnyKernel
        zip -r9 CosmicKernel-Pie-rolex-${tanggal}.zip *
        cd ..
}
sendinfo
compile
zipping
END=$(date +"%s")
DIFF=$(($END - $START))
push
sticker
